//This file was generated with Stellar
import "SDL";
import "SDL_image" as IMG;
import "include/Stellar";
import "math";

export function main<args>{
	//Screen --------------------------------
	local screen = SetVideoMode(640, 480, 0, SWSURFACE);
	SetCaption("Stellar - Example", args[0]);
	//Sprites -------------------------------
	static spr_wall = add_sprite("images/spr_wall.png");
	static spr_player = add_sprite("images/spr_player.png");
	//Objects -------------------------------
	local objects = [];
	local obj_wall = table[
		procedure draw_event(self){
			draw_sprite(self.sprite_index, 0 ,self.x,self.y);
}
		procedure create_event(self){
			self.x=0;
self.y=0;
self.sprite_index = spr_wall;
}
		procedure step_event(self){
			self.x+=0.1;
if self.x>640{
self.x = -10 ;
self.y += 32;
}
}
		] ;
	insert(objects, 0, obj_wall);
	local obj_player = table[
		procedure draw_event(self){
			draw_sprite(self.sprite_index, 0 ,self.x,self.y);
}
		procedure create_event(self){
			self.x=32;
self.y=32;
self.sprite_index = spr_player;
}
		procedure step_event(self){
			
}
		] ;
	insert(objects, 1, obj_player);
	    
    for local i = 0, sizeof objects - 1 {
            objects[i]:create_event();
        }
    while true
    mainloop:{
        while true{
            FillRect(nil, nil, MapColor(screen, 40,40,90));
            for local i = 0, sizeof objects - 1 {
                objects[i]:step_event();
                objects[i]:draw_event();
            }
            Flip();

            local ev = PollEvent();
            if not ev
                break;
            switch ev.type
              case KEYUP
                if ev.sym == KESCAPE
                    break mainloop;
              case QUIT
                break mainloop;
        }
    }
    return 0;
}
